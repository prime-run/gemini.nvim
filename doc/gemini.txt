*gemini.txt*      For Neovim >= 0.8.0      Last change: 2025 July 25

==============================================================================
Table of Contents                                     *gemini-table-of-contents*

1. gemini.nvim                                          |gemini-gemini.nvim|
  - Features                                              |gemini-features|
  - Requirements                                        |gemini-requirements|
  - Installation                                        |gemini-installation|
  - Configuration                                      |gemini-configuration|
  - Usage                                                    |gemini-usage|
  - License                                                  |gemini-license|

==============================================================================
1. gemini.nvim                                          *gemini-gemini.nvim*

A Neovim plugin for interacting with a `gemini` command-line tool, allowing you to ask questions and pass file context directly from the editor.

FEATURES                                                  *gemini-features*

-   **Seamless Integration**: Open a `gemini` CLI session in a floating or vertical split terminal without leaving Neovim.
-   **Context-Aware**: Automatically pass the current file path or visual selection as context to your `gemini` commands.
-   **Interactive Prompts**: Provides a `vim.ui.input`-based prompt to ask questions interactively.
-   **Customizable**: Configure terminal appearance (width, position), command arguments, and window focus behavior.
-   **Intelligent Focus**: Automatically enters insert mode when the terminal gains focus.
-   **Seamless Control**: Manage the terminal with keymaps that work in both normal and insert mode, even from within the terminal itself.
-   **Stateful Sessions**: Toggles terminal visibility without killing the process, and can manage multiple terminal instances.

REQUIREMENTS                                            *gemini-requirements*

-   Neovim 0.8.0+
-   A `gemini` command-line tool installed and available in your system's `PATH`.

INSTALLATION                                            *gemini-installation*

Install the plugin using your favorite plugin manager.

LAZY.NVIM ~

>
    {
      "prime/gemini.nvim",
      config = function()
        require("gemini").setup()
      end,
    }
<

PACKER.NVIM ~

>
    use {
      "prime/gemini.nvim",
      config = function()
        require("gemini").setup()
      end,
    }
<

CONFIGURATION                                          *gemini-configuration*

The plugin comes with the following default configuration, which you can override in the `setup` function.

>
    require("gemini").setup({
      -- The command to execute upon opening. Can be a string or a table.
      cmd = nil,
      -- Whether to focus back on the original window after opening the terminal.
      focus_back = true,
      -- Styling options for the terminal window.
      terminal = {
        width = 30,
        position = "right", -- Can be 'left', 'right', 'top', or 'bottom'
      },
      -- Keymappings for plugin actions. Set to `false` to disable a mapping.
      keymaps = {
        gemini_ask = "<leader>ga",
        gemini_open = false,
        toggle_gemini = "<leader>gt",
        switch_focus = "<leader>gf",
      },
    })
<

EXAMPLE CONFIGURATION ~

Here is a more detailed example:

>
    require("gemini").setup({
      cmd = { "gemini", "--arg1" },
      focus_back = false,
      terminal = {
        width = 40,
        position = "left",
      },
      keymaps = {
        gemini_ask = "<leader>za",
        toggle_gemini = "<leader>zt",
        switch_focus = "<leader>zf",
      },
    })
<

USAGE                                                        *gemini-usage*

The plugin is primarily controlled via keymaps.

KEYBINDINGS ~

The following keymaps are available and can be configured in the `keymaps` table of the `setup` function:

-   `gemini_ask`: The primary interactive function. It is recommended to map this.
-   `gemini_open`: Opens the Gemini terminal without any specific prompt. Disabled by default.
-   `toggle_gemini`: Toggles the visibility of the Gemini terminal window. Works in normal, insert, and terminal modes.
-   `switch_focus`: Switches focus to and from the Gemini terminal window. Works in normal, insert, and terminal modes.

Here is an example of how to set the keymaps:

>
    -- Set keymaps for asking Gemini questions
    local gemini = require("gemini")

    -- Normal mode: Ask a question about the current file
    vim.keymap.set("n", "<leader>ga", gemini.GeminiAsk, { desc = "Ask Gemini" })

    -- Visual mode: Ask a question about the selected text
    vim.keymap.set("v", "<leader>ga", function()
        -- The `use_range` option is automatically detected in visual mode.
        gemini.GeminiAsk()
    end, { desc = "Ask Gemini (Visual)" })
<

COMMANDS ~

The plugin also provides a set of user commands for more direct control:

-   `:Gemini [width] [cmd]`: Opens the Gemini terminal. You can optionally override the configured width and command.
    -   Example: `:Gemini 50 gemini --verbose`
-   `:[range]GeminiAsk`: Echoes the context string for the current file or visual selection. Useful for debugging.
-   `:[range]GeminiParse [text]`: Parses the context and prepends your `[text]` before printing it to the message area.

LICENSE                                                      *gemini-license*

This plugin is licensed under the **MIT License**. See the [LICENSE](./LICENSE) file for more details.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl: